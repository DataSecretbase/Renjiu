# Generated by Django 2.1.3 on 2018-11-06 01:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Audio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(help_text='A url friendly slug for the audio clip.', unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('allow_comments', models.BooleanField(default=False)),
                ('is_public', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('publish_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'get_latest_by': 'publish_date',
                'ordering': ('-publish_date', '-created_date'),
            },
        ),
        migrations.CreateModel(
            name='AudioCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(help_text='A url friendly slug for the category', unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Audio Categories',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='类别名称')),
            ],
            options={
                'verbose_name': '分类',
                'verbose_name_plural': '分类',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='内容')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='评论时间')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='作者')),
            ],
            options={
                'verbose_name': '内容',
                'verbose_name_plural': '内容',
            },
        ),
        migrations.CreateModel(
            name='HTML5Audio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audio_type', models.IntegerField(choices=[(0, 'audio/mpeg'), (1, 'audio/mp3'), (2, 'audio/wma'), (3, 'audio/flac')], default=1, help_text='The Audio type')),
                ('audio_file', models.FileField(help_text="The file you wish to upload. Make sure that it's the correct format.", upload_to='Audio/html5/')),
            ],
            options={
                'verbose_name': 'Html 5 Audio',
                'verbose_name_plural': 'Html 5 Audio',
            },
        ),
        migrations.CreateModel(
            name='HTML5Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_type', models.IntegerField(choices=[(0, 'video/ogg'), (1, 'video/webm'), (2, 'video/mp4'), (3, 'video/flv')], default=1, help_text='The Video type')),
                ('video_file', models.FileField(help_text="The file you wish to upload. Make sure that it's the correct format.", upload_to='videos/html5/')),
            ],
            options={
                'verbose_name': 'Html 5 Video',
                'verbose_name_plural': 'Html 5 Videos',
            },
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='节点名称')),
                ('slug', models.SlugField(max_length=100, verbose_name='url标识符')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_on', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('num_topics', models.IntegerField(default=0, verbose_name='主题数')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='life.Category', verbose_name='所属类别')),
            ],
            options={
                'verbose_name': '节点',
                'verbose_name_plural': '节点',
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='标题')),
                ('content', models.TextField(verbose_name='内容')),
                ('num_views', models.IntegerField(default=0, verbose_name='浏览量')),
                ('num_comments', models.IntegerField(default=0, verbose_name='评论数')),
                ('num_favorites', models.IntegerField(default=0, verbose_name='收藏数')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='发表时间')),
                ('updated_on', models.DateTimeField(blank=True, null=True, verbose_name='更新时间')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='作者')),
                ('last_reply', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='最后回复者')),
                ('node', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='life.Node', verbose_name='所属节点')),
            ],
            options={
                'verbose_name': '主题',
                'verbose_name_plural': '主题',
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(help_text='A url friendly slug for the video clip.', unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('allow_comments', models.BooleanField(default=False)),
                ('is_public', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('publish_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'get_latest_by': 'publish_date',
                'ordering': ('-publish_date', '-created_date'),
            },
        ),
        migrations.CreateModel(
            name='VideoCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(help_text='A url friendly slug for the category', unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Video Categories',
            },
        ),
        migrations.CreateModel(
            name='BasicAudio',
            fields=[
                ('audio_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='life.Audio')),
            ],
            bases=('life.audio',),
        ),
        migrations.CreateModel(
            name='BasicVideo',
            fields=[
                ('video_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='life.Video')),
            ],
            bases=('life.video',),
        ),
        migrations.AddField(
            model_name='video',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='video',
            name='categories',
            field=models.ManyToManyField(blank=True, null=True, to='life.VideoCategory'),
        ),
        migrations.AddField(
            model_name='html5video',
            name='basic_video',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='life.Video'),
        ),
        migrations.AddField(
            model_name='html5audio',
            name='basic_audio',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='life.Audio'),
        ),
        migrations.AddField(
            model_name='comment',
            name='topic',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='life.Topic', verbose_name='所属主题'),
        ),
        migrations.AddField(
            model_name='audio',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='audio',
            name='categories',
            field=models.ManyToManyField(blank=True, null=True, to='life.AudioCategory'),
        ),
    ]
